{"openapi":"3.0.0","info":{"title":"OutQource Node Server","version":"0.0.1"},"servers":[{"url":"http://localhost:8000"}],"components":{"securitySchemes":{"bearerAuth":{"type":"http","scheme":"bearer","bearerFormat":"JWT"}}},"tags":[],"paths":{"/posts":{"get":{"tags":[],"summary":"function getPosts","description":"# getPosts\n```ts\nimport axios from 'axios';\n\n\nexport interface GetPosts {\n    query?: {\n        page?: number\nlimit?: number\n    }\n\n}\n\nexport const getPosts = async (request: GetPosts) => {\n    let url = '/posts';\n    if (request.query && Object.keys(request.query).length > 0) {\n        url += '?' + Object.keys(request.query).map(key => key + '=' + request.query[key]).join('&');\n    }\n\n    const response = await axios.get(url, {query: request.query,\n          });\n\n    return response.data;\n};\n\n```","security":[],"parameters":[{"name":"page","in":"query","required":false,"description":1,"schema":{"type":"number"}},{"name":"limit","in":"query","required":false,"description":20,"schema":{"type":"number"}}],"responses":{"200":{"description":"OK","content":{"application/json":{}}},"500":{"description":"Server Internal Error","content":{"application/json":{}}}},"requestBody":null},"post":{"tags":[],"summary":"function createPost","description":"# createPost\n```ts\nimport axios from 'axios';\n\n\nexport interface CreatePost {\n    body: {\n        title: string\ncontent: string\nphoneNumber: string\n    }\n\n}\n\nexport const createPost = async (request: CreatePost) => {\n    let url = '/posts';\n    const response = await axios.post(url, request.body);\n\n    return response.data;\n};\n\n```","security":[],"parameters":[],"responses":{"200":{"description":"OK","content":{"application/json":{}}},"500":{"description":"Server Internal Error","content":{"application/json":{}}}},"requestBody":{"content":{"application/json":{"schema":{"type":"object","example":{"title":"string","content":"string","phoneNumber":"string"}}}}}}},"/posts/{id}":{"get":{"tags":[],"summary":"function getPost","description":"# getPost\n```ts\nimport axios from 'axios';\n\n\nexport interface GetPost {\n    params: {\n        id: number\n    }\n\n}\n\nexport const getPost = async (request: GetPost) => {\n    let url = '/posts/:id';\n    if (request.params && Object.keys(request.params).length > 0) {\n        url = url.replace(/:(\\w+)/g, (match, key) => {\n            const value = request.params[key as keyof GetPost['params']];\n            if (value) {\n                return value;\n            }\n            return match;\n        });\n    }\n\n    const response = await axios.get(url, {\n            params: request.params,\n            });\n\n    return response.data;\n};\n\n```","security":[],"parameters":[{"name":"id","in":"path","required":true,"description":"id","schema":{"type":"number"}}],"responses":{"200":{"description":"OK","content":{"application/json":{}}},"500":{"description":"Server Internal Error","content":{"application/json":{}}}},"requestBody":null}},"/posts/{id}/comments":{"delete":{"tags":[],"summary":"function deleteComments","description":"# deleteComments\n```ts\nimport axios from 'axios';\n\n\nexport interface DeleteComments {\n    body: {\n        commentIds: unknown[]\n    }\n\n}\n\nexport const deleteComments = async (request: DeleteComments) => {\n    let url = '/posts/:id/comments';\n    const response = await axios.delete(url, {});\n\n    return response.data;\n};\n\n```","security":[],"parameters":[],"responses":{"200":{"description":"OK","content":{"application/json":{}}},"500":{"description":"Server Internal Error","content":{"application/json":{}}}},"requestBody":{"content":{"application/json":{"schema":{"type":"object","example":{"commentIds":["uuid1","uuid2"]}}}}}}},"/todos":{"get":{"tags":[],"summary":"function getTodos","description":"# getTodos\n```ts\nimport axios from 'axios';\n\n\nexport interface GetTodos {\n    \n}\n\nexport const getTodos = async (request: GetTodos) => {\n    let url = '/todos';\n    const response = await axios.get(url, {});\n\n    return response.data;\n};\n\n```","security":[],"parameters":[],"responses":{"200":{"description":"OK","content":{"application/json":{}}},"500":{"description":"Server Internal Error","content":{"application/json":{}}}},"requestBody":null}}}}